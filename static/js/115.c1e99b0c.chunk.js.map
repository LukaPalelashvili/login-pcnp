{"version":3,"sources":["views/components/breadcrumbs/BreadcrumbStyles.js","views/components/breadcrumbs/BreadcrumbsDefault.js","views/components/breadcrumbs/BreadcrumbAlignment.js","views/components/breadcrumbs/BreadCrumbsSourceCode.js","views/components/breadcrumbs/index.js","@core/components/breadcrumbs/index.js","@core/components/card-snippet/index.js"],"names":["BreadcrumbsStyles","listClassName","to","active","BreadcrumbsDefault","BreadcrumbsAlignment","className","breadcrumbsDefault","breadcrumbsStyles","breadcrumbsAlignment","BreadCrumbs","useEffect","Prism","highlightAll","breadCrumbTitle","breadCrumbParent","breadCrumbActive","sm","id","title","code","props","breadCrumbParent2","breadCrumbParent3","tag","color","size","end","Link","CardSnippet","children","noBody","iconCode","useState","isOpen","setIsOpen","IconCode","Wrapper","Fragment","CardBody","onClick"],"mappings":"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","file":"static/js/115.c1e99b0c.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Reactstrap Imports\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\n\n// ** Icons Imports\nimport { Link } from 'react-router-dom'\n\nconst BreadcrumbsStyles = () => {\n  return (\n    <Fragment>\n      <Breadcrumb listClassName='breadcrumb-slash'>\n        <BreadcrumbItem>\n          <Link to='#'> Home </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem>\n          <Link to='#'> Library </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem active>\n          <span> Data </span>\n        </BreadcrumbItem>\n      </Breadcrumb>\n\n      <Breadcrumb listClassName='breadcrumb-dots'>\n        <BreadcrumbItem>\n          <Link to='#'> Home </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem>\n          <Link to='#'> Library </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem active>\n          <span> Data </span>\n        </BreadcrumbItem>\n      </Breadcrumb>\n\n      <Breadcrumb listClassName='breadcrumb-dashes'>\n        <BreadcrumbItem>\n          <Link to='#'> Home </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem>\n          <Link to='#'> Library </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem active>\n          <span> Data </span>\n        </BreadcrumbItem>\n      </Breadcrumb>\n\n      <Breadcrumb listClassName='breadcrumb-pipes'>\n        <BreadcrumbItem>\n          <Link to='#'> Home </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem>\n          <Link to='#'> Library </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem active>\n          <span> Data </span>\n        </BreadcrumbItem>\n      </Breadcrumb>\n\n      <Breadcrumb listClassName='breadcrumb-chevron'>\n        <BreadcrumbItem>\n          <Link to='#'> Home </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem>\n          <Link to='#'> Library </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem active>\n          <span> Data </span>\n        </BreadcrumbItem>\n      </Breadcrumb>\n    </Fragment>\n  )\n}\nexport default BreadcrumbsStyles\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Reactstrap Imports\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\n\n// ** Icons Imports\nimport { Link } from 'react-router-dom'\n\nconst BreadcrumbsDefault = () => {\n  return (\n    <Fragment>\n      <Breadcrumb>\n        <BreadcrumbItem>\n          <Link to='#'> Home </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem>\n          <Link to='#'> Library </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem active>\n          <span> Data </span>\n        </BreadcrumbItem>\n      </Breadcrumb>\n    </Fragment>\n  )\n}\nexport default BreadcrumbsDefault\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Reactstrap Imports\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\n\n// ** Icons Imports\nimport { Link } from 'react-router-dom'\n\nconst BreadcrumbsAlignment = () => {\n  return (\n    <Fragment>\n      <div className='d-flex justify-content-start breadcrumb-wrapper'>\n        <Breadcrumb className='ms-1'>\n          <BreadcrumbItem>\n            <Link to='#'> Home </Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='#'> Library </Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <span> Data </span>\n          </BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <div className='d-flex justify-content-center breadcrumb-wrapper my-1'>\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='#'> Home </Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='#'> Library </Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <span> Data </span>\n          </BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <div className='d-flex justify-content-end breadcrumb-wrapper'>\n        <Breadcrumb className='me-1'>\n          <BreadcrumbItem>\n            <Link to='#'> Home </Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='#'> Library </Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem className='pe-1'>\n            <span> Data </span>\n          </BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n    </Fragment>\n  )\n}\nexport default BreadcrumbsAlignment\n","export const breadcrumbsDefault = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\nimport { Link } from 'react-router-dom'\n\nconst BreadcrumbsDefault = () => {\n  return (\n    <React.Fragment>\n      <Breadcrumb className='ms-1'>\n        <BreadcrumbItem>\n          <Link to='#'> Home </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem>\n          <Link to='#'> Library </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem active>\n          <span> Data </span>\n        </BreadcrumbItem>\n      </Breadcrumb>\n    </React.Fragment>\n  )\n}\nexport default BreadcrumbsDefault\n    `}\n    </code>\n  </pre>\n)\n\nexport const breadcrumbsStyles = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\nimport { Link } from 'react-router-dom'\n\nconst BreadcrumbsStyles = () => {\n  return (\n    <React.Fragment>\n      <Breadcrumb className='breadcrumb-slash'>\n        <BreadcrumbItem>\n          <Link to='#'> Home </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem>\n          <Link to='#'> Library </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem active>\n          <span> Data </span>\n        </BreadcrumbItem>\n      </Breadcrumb>\n\n      <Breadcrumb className='breadcrumb-dots'>\n        <BreadcrumbItem>\n          <Link to='#'> Home </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem>\n          <Link to='#'> Library </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem active>\n          <span> Data </span>\n        </BreadcrumbItem>\n      </Breadcrumb>\n\n      <Breadcrumb className='breadcrumb-dashes'>\n        <BreadcrumbItem>\n          <Link to='#'> Home </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem>\n          <Link to='#'> Library </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem active>\n          <span> Data </span>\n        </BreadcrumbItem>\n      </Breadcrumb>\n\n      <Breadcrumb className='breadcrumb-pipes'>\n        <BreadcrumbItem>\n          <Link to='#'> Home </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem>\n          <Link to='#'> Library </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem active>\n          <span> Data </span>\n        </BreadcrumbItem>\n      </Breadcrumb>\n\n      <Breadcrumb className='breadcrumb-chevron'>\n        <BreadcrumbItem>\n          <Link to='#'> Home </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem>\n          <Link to='#'> Library </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem active>\n          <span> Data </span>\n        </BreadcrumbItem>\n      </Breadcrumb>\n    </React.Fragment>\n  )\n}\nexport default BreadcrumbsStyles\n\n      `}\n    </code>\n  </pre>\n)\n\nexport const breadcrumbsAlignment = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\nimport { Link } from 'react-router-dom'\n\nconst BreadcrumbsAlignment = () => {\n  return (\n    <React.Fragment>\n      <div className='justify-content-start breadcrumb-wrapper'>\n        <Breadcrumb className='ms-1'>\n          <BreadcrumbItem>\n            <Link to='#'> Home </Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='#'> Library </Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <span> Data </span>\n          </BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <div className='justify-content-center breadcrumb-wrapper'>\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='#'> Home </Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='#'> Library </Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <span> Data </span>\n          </BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <div className='justify-content-end breadcrumb-wrapper'>\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='#'> Home </Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='#'> Library </Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <span> Data </span>\n          </BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n    </React.Fragment>\n  )\n}\nexport default BreadcrumbsAlignment\n\n      `}\n    </code>\n  </pre>\n)\n","// ** React Imports\nimport { Fragment, useEffect } from 'react'\n\n// ** Third Party Components\nimport Prism from 'prismjs'\n\n// ** Demo Components\nimport BreadCrumbStyles from './BreadcrumbStyles'\nimport BreadcrumbsDefault from './BreadcrumbsDefault'\nimport BreadCrumbsPage from '@components/breadcrumbs'\nimport BreadCrumbAlignment from './BreadcrumbAlignment'\n\n// ** Custom Components\nimport Card from '@components/card-snippet'\n\n// ** Reactstrap Imports\nimport { Row, Col, CardText } from 'reactstrap'\n\n// ** Source Code\nimport { breadcrumbsAlignment, breadcrumbsDefault, breadcrumbsStyles } from './BreadCrumbsSourceCode'\n\nconst BreadCrumbs = () => {\n  useEffect(() => {\n    Prism.highlightAll()\n  }, [])\n\n  return (\n    <Fragment>\n      <BreadCrumbsPage breadCrumbTitle='Breadcrumbs' breadCrumbParent='Components' breadCrumbActive='Breadcrumbs' />\n\n      <Row>\n        <Col sm='12'>\n          <section id='component-breadcrumbs'>\n            <Card title='Default' code={breadcrumbsDefault}>\n              <BreadcrumbsDefault />\n            </Card>\n            <Card title='Styles' code={breadcrumbsStyles}>\n              <CardText>\n                These breadcrumbs are only for demo puropses. You can change breadcrumb seprator by changing{' '}\n                <code>$breadcrumb-divider</code> variable value in scss\n              </CardText>\n              <BreadCrumbStyles />\n            </Card>\n          </section>\n        </Col>\n        <Col sm='12'>\n          <section id='breadcrumb-alignment'>\n            <Card title='Alignment' code={breadcrumbsAlignment}>\n              <CardText>\n                Use class <code>.justify-content-{'{position}'}</code> to align breadcrumb to desired position.\n              </CardText>\n              <BreadCrumbAlignment />\n            </Card>\n          </section>\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\nexport default BreadCrumbs\n","// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Breadcrumb,\n  DropdownMenu,\n  DropdownItem,\n  BreadcrumbItem,\n  DropdownToggle,\n  UncontrolledButtonDropdown\n} from 'reactstrap'\n\nconst BreadCrumbs = props => {\n  // ** Props\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\n\n  return (\n    <div className='content-header row'>\n      <div className='content-header-left col-md-9 col-12 mb-2'>\n        <div className='row breadcrumbs-top'>\n          <div className='col-12'>\n            {breadCrumbTitle ? <h2 className='content-header-title float-start mb-0'>{breadCrumbTitle}</h2> : ''}\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\n              <Breadcrumb>\n                <BreadcrumbItem tag='li'>\n                  <Link to='/'>Home</Link>\n                </BreadcrumbItem>\n                <BreadcrumbItem tag='li' className='text-primary'>\n                  {breadCrumbParent}\n                </BreadcrumbItem>\n                {breadCrumbParent2 ? (\n                  <BreadcrumbItem tag='li' className='text-primary'>\n                    {breadCrumbParent2}\n                  </BreadcrumbItem>\n                ) : (\n                  ''\n                )}\n                {breadCrumbParent3 ? (\n                  <BreadcrumbItem tag='li' className='text-primary'>\n                    {breadCrumbParent3}\n                  </BreadcrumbItem>\n                ) : (\n                  ''\n                )}\n                <BreadcrumbItem tag='li' active>\n                  {breadCrumbActive}\n                </BreadcrumbItem>\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\n        <div className='breadcrumb-right dropdown'>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\n              <Grid size={14} />\n            </DropdownToggle>\n            <DropdownMenu tag='ul' end>\n              <DropdownItem tag={Link} to='/apps/todo'>\n                <CheckSquare className='me-1' size={14} />\n                <span className='align-middle'>Todo</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <MessageSquare className='me-1' size={14} />\n                <span className='align-middle'>Chat</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/email'>\n                <Mail className='me-1' size={14} />\n                <span className='align-middle'>Email</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/calendar'>\n                <Calendar className='me-1' size={14} />\n                <span className='align-middle'>Calendar</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  breadCrumbTitle: Proptypes.string.isRequired,\n  breadCrumbActive: Proptypes.string.isRequired\n}\n","// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport { Code } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardBody, CardTitle, Collapse } from 'reactstrap'\n\nconst CardSnippet = props => {\n  // ** Props\n  const { title, children, noBody, code, iconCode } = props\n\n  // ** State\n  const [isOpen, setIsOpen] = useState(false)\n\n  // ** If user passes custom icon then render that else render default icon\n  const IconCode = iconCode ? iconCode : <Code size={15} />\n\n  // ** To toggle collapse\n  const toggle = () => setIsOpen(!isOpen)\n\n  // ** If user passes noBody then return <Fragment> else return <CardBody>\n  const Wrapper = noBody ? Fragment : CardBody\n\n  return (\n    <Card className='card-snippet'>\n      <CardHeader>\n        <CardTitle tag='h4'>{title}</CardTitle>\n        <div className='views cursor-pointer' onClick={toggle}>\n          {IconCode}\n        </div>\n      </CardHeader>\n      <Wrapper>{children}</Wrapper>\n      <Collapse isOpen={isOpen}>\n        <CardBody>{code}</CardBody>\n      </Collapse>\n    </Card>\n  )\n}\n\nexport default CardSnippet\n\n// ** PropTypes\nCardSnippet.propTypes = {\n  code: PropTypes.node,\n  noBody: PropTypes.bool,\n  children: PropTypes.any,\n  iconCode: PropTypes.node,\n  className: PropTypes.string,\n  title: PropTypes.string.isRequired\n}\n"],"sourceRoot":""}