{"version":3,"sources":["views/ui-elements/page-layouts/LayoutEmpty.js","@core/components/breadcrumbs/index.js"],"names":["LayoutEmpty","breadCrumbTitle","breadCrumbParent","breadCrumbActive","color","className","href","target","BreadCrumbs","props","breadCrumbParent2","breadCrumbParent3","tag","to","active","size","end","Link"],"mappings":"qJAAA,0CAgCeA,UAvBK,WAClB,OACE,eAAC,WAAD,WACE,cAAC,IAAD,CAAaC,gBAAgB,eAAeC,iBAAiB,UAAUC,iBAAiB,iBACxF,cAAC,IAAD,CAAOC,MAAM,UAAb,SACE,sBAAKC,UAAU,aAAf,UACE,sBAAMA,UAAU,UAAhB,oBACA,8HAC6F,IAC3F,mBACEC,KAAK,8GACLC,OAAO,SAFT,wCAKK,IAPP,iC,iCChBV,yEAuFeC,IAtEK,SAAAC,GAElB,IAAQR,EAA8FQ,EAA9FR,gBAAiBC,EAA6EO,EAA7EP,iBAAkBQ,EAA2DD,EAA3DC,kBAAmBC,EAAwCF,EAAxCE,kBAAmBR,EAAqBM,EAArBN,iBAEjF,OACE,sBAAKE,UAAU,qBAAf,UACE,qBAAKA,UAAU,2CAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,sBAAKA,UAAU,SAAf,UACGJ,EAAkB,oBAAII,UAAU,wCAAd,SAAuDJ,IAAwB,GAClG,qBAAKI,UAAU,6DAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAgBO,IAAI,KAApB,SACE,cAAC,IAAD,CAAMC,GAAG,IAAT,oBAEF,cAAC,IAAD,CAAgBD,IAAI,KAAKP,UAAU,eAAnC,SACGH,IAEFQ,EACC,cAAC,IAAD,CAAgBE,IAAI,KAAKP,UAAU,eAAnC,SACGK,IAGH,GAEDC,EACC,cAAC,IAAD,CAAgBC,IAAI,KAAKP,UAAU,eAAnC,SACGM,IAGH,GAEF,cAAC,IAAD,CAAgBC,IAAI,KAAKE,QAAM,EAA/B,SACGX,gBAOb,qBAAKE,UAAU,qEAAf,SACE,qBAAKA,UAAU,4BAAf,SACE,eAAC,KAAD,WACE,cAAC,IAAD,CAAgBD,MAAM,UAAUW,KAAK,KAAKV,UAAU,qCAApD,SACE,cAAC,IAAD,CAAMU,KAAM,OAEd,eAAC,IAAD,CAAcH,IAAI,KAAKI,KAAG,EAA1B,UACE,eAAC,IAAD,CAAcJ,IAAKK,IAAMJ,GAAG,aAA5B,UACE,cAAC,IAAD,CAAaR,UAAU,OAAOU,KAAM,KACpC,sBAAMV,UAAU,eAAhB,qBAEF,eAAC,IAAD,CAAcO,IAAKK,IAAMJ,GAAG,aAA5B,UACE,cAAC,IAAD,CAAeR,UAAU,OAAOU,KAAM,KACtC,sBAAMV,UAAU,eAAhB,qBAEF,eAAC,IAAD,CAAcO,IAAKK,IAAMJ,GAAG,cAA5B,UACE,cAAC,IAAD,CAAMR,UAAU,OAAOU,KAAM,KAC7B,sBAAMV,UAAU,eAAhB,sBAEF,eAAC,IAAD,CAAcO,IAAKK,IAAMJ,GAAG,iBAA5B,UACE,cAAC,IAAD,CAAUR,UAAU,OAAOU,KAAM,KACjC,sBAAMV,UAAU,eAAhB","file":"static/js/145.89205a3a.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Custom Components\nimport Breadcrumbs from '@components/breadcrumbs'\n\n// ** Reactstrap Imports\nimport { Alert } from 'reactstrap'\n\nconst LayoutEmpty = () => {\n  return (\n    <Fragment>\n      <Breadcrumbs breadCrumbTitle='Layout Empty' breadCrumbParent='Layouts' breadCrumbActive='Layout Empty' />\n      <Alert color='primary'>\n        <div className='alert-body'>\n          <span className='fw-bold'>Info: </span>\n          <span>\n            This layout can be useful for getting started with empty content section. Please check the{' '}\n            <a\n              href='https://pixinvent.com/demo/vuexy-react-admin-dashboard-template/documentation/docs/development/page-layouts'\n              target='_blank'\n            >\n              Layout empty documentation\n            </a>{' '}\n            for more details.\n          </span>\n        </div>\n      </Alert>\n    </Fragment>\n  )\n}\n\nexport default LayoutEmpty\n","// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Breadcrumb,\n  DropdownMenu,\n  DropdownItem,\n  BreadcrumbItem,\n  DropdownToggle,\n  UncontrolledButtonDropdown\n} from 'reactstrap'\n\nconst BreadCrumbs = props => {\n  // ** Props\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\n\n  return (\n    <div className='content-header row'>\n      <div className='content-header-left col-md-9 col-12 mb-2'>\n        <div className='row breadcrumbs-top'>\n          <div className='col-12'>\n            {breadCrumbTitle ? <h2 className='content-header-title float-start mb-0'>{breadCrumbTitle}</h2> : ''}\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\n              <Breadcrumb>\n                <BreadcrumbItem tag='li'>\n                  <Link to='/'>Home</Link>\n                </BreadcrumbItem>\n                <BreadcrumbItem tag='li' className='text-primary'>\n                  {breadCrumbParent}\n                </BreadcrumbItem>\n                {breadCrumbParent2 ? (\n                  <BreadcrumbItem tag='li' className='text-primary'>\n                    {breadCrumbParent2}\n                  </BreadcrumbItem>\n                ) : (\n                  ''\n                )}\n                {breadCrumbParent3 ? (\n                  <BreadcrumbItem tag='li' className='text-primary'>\n                    {breadCrumbParent3}\n                  </BreadcrumbItem>\n                ) : (\n                  ''\n                )}\n                <BreadcrumbItem tag='li' active>\n                  {breadCrumbActive}\n                </BreadcrumbItem>\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\n        <div className='breadcrumb-right dropdown'>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\n              <Grid size={14} />\n            </DropdownToggle>\n            <DropdownMenu tag='ul' end>\n              <DropdownItem tag={Link} to='/apps/todo'>\n                <CheckSquare className='me-1' size={14} />\n                <span className='align-middle'>Todo</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <MessageSquare className='me-1' size={14} />\n                <span className='align-middle'>Chat</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/email'>\n                <Mail className='me-1' size={14} />\n                <span className='align-middle'>Email</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/calendar'>\n                <Calendar className='me-1' size={14} />\n                <span className='align-middle'>Calendar</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  breadCrumbTitle: Proptypes.string.isRequired,\n  breadCrumbActive: Proptypes.string.isRequired\n}\n"],"sourceRoot":""}