{"version":3,"sources":["views/extensions/toastify/ToastTypes.js","views/extensions/toastify/ToastifyOptions.js","views/extensions/toastify/ToastPositions.js","views/extensions/toastify/ToastrAnimations.js","views/extensions/toastify/index.js","@core/components/extensions-header/index.js"],"names":["PrimaryToast","className","size","color","icon","role","SuccessToast","ErrorToast","WarningToast","InfoToast","SuccessProgressToast","ToastTypes","tag","onClick","toast","hideProgressBar","outline","success","error","warning","info","AutoCloseToast","Toastr","autoClose","title","ToastPositions","sm","position","POSITION","TOP_LEFT","TOP_CENTER","TOP_RIGHT","BOTTOM_LEFT","BOTTOM_CENTER","BOTTOM_RIGHT","ToastAnimations","transition","Bounce","Flip","Zoom","Slide","subTitle","link","ToastrAnimations","ExtensionsHeader","props","href","target","rel"],"mappings":"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","file":"static/js/152.32c5ba07.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport { toast } from 'react-toastify'\nimport { Bell, Check, X, AlertTriangle, Info } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardBody, CardTitle, Button } from 'reactstrap'\n\nconst PrimaryToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='primary' icon={<Bell size={12} />} />\n        <h6 className='toast-title'>Default!</h6>\n      </div>\n      <small className='text-muted'>11 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        ðŸ‘‹ Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst SuccessToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>Success!</h6>\n      </div>\n      <small className='text-muted'>11 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        ðŸ‘‹ Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst ErrorToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='danger' icon={<X size={12} />} />\n        <h6 className='toast-title'>Error!</h6>\n      </div>\n      <small className='text-muted'>11 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        ðŸ‘‹ Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst WarningToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='warning' icon={<AlertTriangle size={12} />} />\n        <h6 className='toast-title'>Warning!</h6>\n      </div>\n      <small className='text-muted'>11 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        ðŸ‘‹ Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst InfoToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='info' icon={<Info size={12} />} />\n        <h6 className='toast-title'>Info!</h6>\n      </div>\n      <small className='text-muted'>11 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        ðŸ‘‹ Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst SuccessProgressToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>Progress Bar!</h6>\n      </div>\n      <small className='text-muted'>11 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        ðŸ‘‹ Jelly-o macaroon brownie tart ice cream croissant jelly-o apple pie.\n      </span>\n    </div>\n  </Fragment>\n)\n\nconst ToastTypes = () => {\n  const notifyDefault = () => toast(<PrimaryToast />, { icon: false, hideProgressBar: true })\n  const notifySuccess = () => toast.success(<SuccessToast />, { icon: false, hideProgressBar: true })\n  const notifyError = () => toast.error(<ErrorToast />, { icon: false, hideProgressBar: true })\n  const notifyWarning = () => toast.warning(<WarningToast />, { icon: false, hideProgressBar: true })\n  const notifyInfo = () => toast.info(<InfoToast />, { icon: false, hideProgressBar: true })\n  const notifySuccessProgress = () => toast.success(<SuccessProgressToast />, { icon: false })\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Types</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div className='demo-inline-spacing'>\n          <Button color='primary' onClick={notifyDefault} outline>\n            Default\n          </Button>\n          <Button color='success' onClick={notifySuccess} outline>\n            Success\n          </Button>\n          <Button color='danger' onClick={notifyError} outline>\n            Error\n          </Button>\n          <Button color='warning' onClick={notifyWarning} outline>\n            Warning\n          </Button>\n          <Button color='info' onClick={notifyInfo} outline>\n            Info\n          </Button>\n          <Button color='success' onClick={notifySuccessProgress} outline>\n            Success Progress Bar\n          </Button>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default ToastTypes\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport { toast } from 'react-toastify'\nimport { X, Loader, Info } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardBody, CardTitle, Button } from 'reactstrap'\n\nconst ErrorToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='danger' icon={<X size={12} />} />\n        <h6 className='text-danger ms-50 mb-0'>Delayed</h6>\n      </div>\n      <small className='text-muted'>11 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span>Candy jelly-o apple pie chocolate bar croissant gummies tiramisu macaroon.</span>\n    </div>\n  </Fragment>\n)\n\nconst AutoCloseToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='primary' icon={<Loader size={12} />} />\n        <h6 className='text-primary ms-50 mb-0'>Auto Close</h6>\n      </div>\n      <small className='text-muted'>11 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span>Candy jelly-o apple pie chocolate bar croissant gummies tiramisu macaroon.</span>\n    </div>\n  </Fragment>\n)\n\nconst InfoToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='info' icon={<Info size={12} />} />\n        <h6 className='text-info ms-50 mb-0'>Sticky Toast!</h6>\n      </div>\n      <small className='text-muted'>11 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span>Candy jelly-o apple pie chocolate bar croissant gummies tiramisu macaroon.</span>\n    </div>\n  </Fragment>\n)\n\nconst Toastr = () => {\n  const notifyDelay = () => toast.error(<ErrorToast />, { icon: false, autoClose: 10000, hideProgressBar: true })\n  const notifySticky = () => toast.info(<InfoToast />, { icon: false, autoClose: false, hideProgressBar: true })\n  const notifyAutoClose = () => {\n    return toast.success(<AutoCloseToast />, { icon: false, autoClose: 3000, hideProgressBar: true })\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Options</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div className='demo-inline-spacing'>\n          <Button color='primary' outline onClick={notifyDelay}>\n            Delay\n          </Button>\n\n          <Button color='primary' outline onClick={notifyAutoClose}>\n            AutoClose\n          </Button>\n\n          <Button color='primary' outline onClick={notifySticky}>\n            Sticky\n          </Button>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default Toastr\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport { Info } from 'react-feather'\nimport { toast } from 'react-toastify'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardBody, CardTitle, Button, Row, Col } from 'reactstrap'\n\nconst InfoToast = ({ title }) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='info' icon={<Info size={12} />} />\n        <h6 className='text-info ms-50 mb-0'>{title}</h6>\n      </div>\n      <small className='text-muted'>11 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span>I do not think that word means what you think it means.</span>\n    </div>\n  </Fragment>\n)\n\nconst ToastPositions = () => {\n  const notifyTopLeft = () => {\n    return toast.info(<InfoToast title='Top Left!' />, {\n      icon: false,\n      hideProgressBar: true,\n      position: toast.POSITION.TOP_LEFT\n    })\n  }\n  const notifyTopCenter = () => {\n    return toast.info(<InfoToast title='Top Center!' />, {\n      icon: false,\n      hideProgressBar: true,\n      position: toast.POSITION.TOP_CENTER\n    })\n  }\n  const notifyTopRight = () => {\n    return toast.info(<InfoToast title='This Right!' />, {\n      icon: false,\n      hideProgressBar: true,\n      position: toast.POSITION.TOP_RIGHT\n    })\n  }\n\n  const notifyBottomLeft = () => {\n    return toast.info(<InfoToast title='Bottom Left!' />, {\n      icon: false,\n      hideProgressBar: true,\n      position: toast.POSITION.BOTTOM_LEFT\n    })\n  }\n  const notifyBottomCenter = () => {\n    return toast.info(<InfoToast title='Bottom Center!' />, {\n      icon: false,\n      hideProgressBar: true,\n      position: toast.POSITION.BOTTOM_CENTER\n    })\n  }\n  const notifyBottomRight = () => {\n    return toast.info(<InfoToast title='This Right!' />, {\n      icon: false,\n      hideProgressBar: true,\n      position: toast.POSITION.BOTTOM_RIGHT\n    })\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Positions</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <Row>\n          <Col sm='12'>\n            <h5 className='mb-0'>Top Positions</h5>\n            <div className='demo-inline-spacing'>\n              <Button color='primary' outline onClick={notifyTopLeft}>\n                Top Left\n              </Button>\n              <Button color='primary' outline onClick={notifyTopCenter}>\n                Top Center\n              </Button>\n              <Button color='primary' outline onClick={notifyTopRight}>\n                Top Right\n              </Button>\n            </div>\n          </Col>\n          <Col sm='12'>\n            <h5 className='mt-2 mb-0'>Bottom Positions</h5>\n            <div className='demo-inline-spacing'>\n              <Button color='primary' outline onClick={notifyBottomLeft}>\n                Bottom Left\n              </Button>\n\n              <Button color='primary' outline onClick={notifyBottomCenter}>\n                Bottom Center\n              </Button>\n\n              <Button color='primary' outline onClick={notifyBottomRight}>\n                Bottom Right\n              </Button>\n            </div>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default ToastPositions\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport { Check, X, AlertTriangle, Info } from 'react-feather'\nimport { toast, Slide, Zoom, Flip, Bounce } from 'react-toastify'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardBody, CardTitle, Button } from 'reactstrap'\n\nconst SuccessToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='text-success ms-50 mb-0'>Bounce!</h6>\n      </div>\n      <small className='text-muted'>11 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span>I do not think that word means what you think it means.</span>\n    </div>\n  </Fragment>\n)\n\nconst WarningToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='warning' icon={<AlertTriangle size={12} />} />\n        <h6 className='text-warning ms-50 mb-0'>Flip!</h6>\n      </div>\n      <small className='text-muted'>11 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span>I do not think that word means what you think it means.</span>\n    </div>\n  </Fragment>\n)\n\nconst ErrorToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='danger' icon={<X size={12} />} />\n        <h6 className='text-danger ms-50 mb-0'>Zoom!</h6>\n      </div>\n      <small className='text-muted'>11 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span>I do not think that word means what you think it means.</span>\n    </div>\n  </Fragment>\n)\n\nconst InfoToast = () => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='info' icon={<Info size={12} />} />\n        <h6 className='text-info ms-50 mb-0'>Slide!</h6>\n      </div>\n      <small className='text-muted'>11 Min Ago</small>\n    </div>\n    <div className='toastify-body'>\n      <span>I do not think that word means what you think it means.</span>\n    </div>\n  </Fragment>\n)\n\nconst ToastAnimations = () => {\n  const notifyBounce = () => toast.success(<SuccessToast />, { icon: false, transition: Bounce, hideProgressBar: true })\n  const notifyFlip = () => toast.warning(<WarningToast />, { icon: false, transition: Flip, hideProgressBar: true })\n  const notifyZoom = () => toast.error(<ErrorToast />, { icon: false, transition: Zoom, hideProgressBar: true })\n  const notifySlide = () => toast.info(<InfoToast />, { icon: false, transition: Slide, hideProgressBar: true })\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Animations</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div className='demo-inline-spacing'>\n          <Button color='primary' outline onClick={notifyBounce}>\n            Bounce\n          </Button>\n\n          <Button color='primary' outline onClick={notifyFlip}>\n            Flip\n          </Button>\n\n          <Button color='primary' outline onClick={notifyZoom}>\n            Zoom\n          </Button>\n\n          <Button color='primary' outline onClick={notifySlide}>\n            Slide\n          </Button>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default ToastAnimations\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Demo Components\nimport ToastrTypes from './ToastTypes'\nimport ToastrOptions from './ToastifyOptions'\nimport ToastrPositions from './ToastPositions'\nimport ToastrAnimations from './ToastrAnimations'\n\n// ** Custom Components\nimport ExtensionsHeader from '@components/extensions-header'\n\nconst Toastr = () => {\n  return (\n    <Fragment>\n      <ExtensionsHeader\n        title='React Toastify'\n        subTitle='React Toastify makes notification easy ðŸš€ !'\n        link='https://github.com/fkhadra/react-toastify'\n      />\n\n      <Row>\n        <Col sm='12'>\n          <ToastrTypes />\n        </Col>\n        <Col sm='12'>\n          <ToastrPositions />\n        </Col>\n        <Col sm='12'>\n          <ToastrAnimations />\n        </Col>\n        <Col sm='12'>\n          <ToastrOptions />\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\n\nexport default Toastr\n","// ** React Imports\nimport Proptypes from 'prop-types'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\nconst ExtensionsHeader = props => {\n  return (\n    <Row className='mb-2'>\n      <Col sm='12' className='ms-50'>\n        <p className='font-medium-5 mt-1 extension-title' data-tour='extension-title'>\n          {props.title}\n        </p>\n        {props.link ? (\n          <a href={props.link} target='_blank' rel='noopener noreferrer'>\n            {props.subTitle}\n          </a>\n        ) : (\n          <p className='text-primary'>{props.subTitle}</p>\n        )}\n      </Col>\n    </Row>\n  )\n}\nexport default ExtensionsHeader\n\n// ** PropTypes\nExtensionsHeader.propTypes = {\n  link: Proptypes.string,\n  title: Proptypes.string.isRequired,\n  subTitle: Proptypes.string.isRequired\n}\n"],"sourceRoot":""}